 






Free software

From Wikipedia, the free encyclopedia


					Jump to:					navigation, 					search

For other uses, see Free software (disambiguation).
Not to be confused with Freeware (proprietary software with no monetary cost) or open-source software (a related but weaker category).
For a broader coverage related to this topic, see Free software movement.
Free software, freedom-respecting software, or software libre[1][2] is computer software distributed under terms that allow the software users to run the software for any purpose as well as to study, change, and distribute the software and any adapted versions.[3][4][5][6][7] Free software is a matter of liberty, not price: users, individually or collectively, are free to do what they want with it, including the freedom to redistribute the software free of charge, or to sell it, or charge for related services such as support or warranty for profit.[8]
The right to study and modify software entails availability of the software source code to its users. While this right is often called 'access to source code', the Free Software Foundation recommends to avoid using the word 'access' in this context[9] because it is misleading and may make people believe that they may have a copy of the source code unconditionally. This right is only conditional on the person actually having a copy of the software, i.e. being a software user.
Richard Stallman used the already existing term free software[10] when he launched the GNU Project—a collaborative effort to create a freedom-respecting operating system—and the Free Software Foundation (FSF). The FSF's Free Software Definition[5] states that users of free software are free because they do not need to ask for permission to use the software.[11]



Contents


1 Alternatives and context
2 History

2.1 1980s: Foundation of the GNU project
2.2 1990s: Release of the Linux kernel


3 Naming
4 Definition and the Four Freedoms
5 Examples
6 Licensing
7 Security and reliability

7.1 Binary blobs and other proprietary software


8 Business model
9 Economical aspects and adoption
10 See also
11 References
12 Further reading
13 External links



Alternatives and context[edit]
Free software thus differs from

proprietary software, such as Microsoft Office, Google Docs, Sheets, and Slides or iWork from Apple, which users cannot study, change, and share.
freeware, which is a category of freedom-restricting proprietary software that does not require payment for use.

For computer programs that are covered by copyright law, software freedom is achieved with a software license, by which the author grants users the aforementioned freedom. Software that is not covered by copyright law, such as software in the public domain, is free if the source code is in the public domain, or otherwise available without restrictions.
Proprietary software, including freeware, use restrictive software licences or EULAs and usually do not provide access to the source code. Users are thus prevented from changing the software, and this results in the user relying on the publisher to provide updates, help, and support. This situation is called vendor lock-in. Users often may not reverse engineer, modify, or redistribute proprietary software.[12][13] Other legal and technical aspects, such as software patents and digital rights management may restrict users in exercising their rights, and thus prevent software from being free.[14] Free software may be developed collaboratively by volunteer computer programmers or by corporations; as part of a commercial, for-profit activity or not.
History[edit]
Further information: History of free and open-source software
See also: Open-source software § History




Richard Stallman, founder of the Free Software Movement (2009)


From the 1950s up until the early 1970s, it was normal for computer users to have the software freedoms associated with free software, which was typically public domain software.[10] Software was commonly shared by individuals who used computers and by hardware manufacturers who welcomed the fact that people were making software that made their hardware useful. Organizations of users and suppliers, for example, SHARE, were formed to facilitate exchange of software. As software was often written in an interpreted language such as BASIC, the source code was distributed to use a software. Software was also shared and distributed as printed source code (Type-in program) in computer magazines (like Creative Computing, SoftSide, Compute!, Byte etc) and books, like the bestseller BASIC Computer Games.[15] By the early 1970s, the picture changed: software costs were dramatically increasing, a growing software industry was competing with the hardware manufacturer's bundled software products (free in that the cost was included in the hardware cost), leased machines required software support while providing no revenue for software, and some customers able to better meet their own needs did not want the costs of "free" software bundled with hardware product costs. In United States vs. IBM, filed January 17, 1969, the government charged that bundled software was anti-competitive.[16] While some software might always be free, there would henceforth be a growing amount of software produced primarily for sale. In the 1970s and early 1980s, the software industry began using technical measures (such as only distributing binary copies of computer programs) to prevent computer users from being able to study or adapt the software as they saw fit. In 1980, copyright law was extended to computer programs.
In 1983, Richard Stallman, one of the original authors of the popular Emacs program and a longtime member of the hacker community at the MIT Artificial Intelligence Laboratory, announced the GNU project, the purpose of which was to produce a completely non-proprietary Unix-compatible operating system, saying that he had become frustrated with the shift in climate surrounding the computer world and its users. In his initial declaration of the project and its purpose, he specifically cited as a motivation his opposition to being asked to agree to non-disclosure agreements and restrictive licenses which prohibited the free sharing of potentially profitable in-development software, a prohibition directly contrary to the traditional hacker ethic. Software development for the GNU operating system began in January 1984, and the Free Software Foundation (FSF) was founded in October 1985. He developed a free software definition and the concept of "copyleft", designed to ensure software freedom for all. Some non-software industries are beginning to use techniques similar to those used in free software development for their research and development process; scientists, for example, are looking towards more open development processes, and hardware such as microchips are beginning to be developed with specifications released under copyleft licenses (see the OpenCores project, for instance). Creative Commons and the free culture movement have also been largely influenced by the free software movement.
1980s: Foundation of the GNU project[edit]
In 1983, Richard Stallman, longtime member of the hacker community at the MIT Artificial Intelligence Laboratory, announced the GNU project, saying that he had become frustrated with the effects of the change in culture of the computer industry and its users.[17] Software development for the GNU operating system began in January 1984, and the Free Software Foundation (FSF) was founded in October 1985. An article outlining the project and its goals was published in March 1985 titled the GNU Manifesto. The manifesto included significant explanation of the GNU philosophy, Free Software Definition and "copyleft" ideas.
1990s: Release of the Linux kernel[edit]
The Linux kernel, started by Linus Torvalds, was released as freely modifiable source code in 1991. The first licence was a proprietary software licence. However, with version 0.12 in February 1992, he relicensed the project under the GNU General Public License.[18] Much like Unix, Torvalds' kernel attracted the attention of volunteer programmers. FreeBSD and NetBSD (both derived from 386BSD) were released as free software when the USL v. BSDi lawsuit was settled out of court in 1993. OpenBSD forked from NetBSD in 1995. Also in 1995, The Apache HTTP Server, commonly referred to as Apache, was released under the Apache License 1.0.
Naming[edit]
Main article: Alternative terms for free software
The FSF recommends using the term "free software" rather than "open-source software" because, as they state in a paper on Free Software philosophy, the latter term and the associated marketing campaign focuses on the technical issues of software development, avoiding the issue of user freedoms. The FSF also notes that "Open Source" has exactly one specific meaning in common English, namely that "you can look at the source code." Stallman states that while the term "Free Software" can lead to two different interpretations, one of them is consistent with FSF definition of Free Software so there is at least some chance that it could be understood properly, unlike the term "Open Source".[19] Stallman has also stated that considering the practical advantages of free software is like considering the practical advantages of not being handcuffed in that it is not necessary for an individual to consider practical reasons in order to realize that being handcuffed restricts their freedom.[20] "Libre" is often used to avoid the ambiguity of the word "free" in English language and the ambiguity with the older usage of "free software" as public domain software;[10] see Gratis versus libre.
Definition and the Four Freedoms[edit]
Main article: The Free Software Definition
See also: Debian Free Software Guidelines and Open Source Definition




Diagram of free and nonfree software, as defined by the Free Software Foundation. Left: free software, right: proprietary software, encircled: Gratis software


The first formal definition of free software was published by FSF in February 1986.[21] That definition, written by Richard Stallman, is still maintained today and states that software is free software if people who receive a copy of the software have the following four freedoms.[22][23] The numbering begins with zero, not only as a spoof on the common usage of zero-based numbering in programming languages, but also because "Freedom 0" was not initially included in the list, but later added first in the list as it was considered very important.

Freedom 0: The freedom to run the program for any purpose.
Freedom 1: The freedom to study how the program works, and change it to make it do what you wish.
Freedom 2: The freedom to redistribute and make copies so you can help your neighbor.
Freedom 3: The freedom to improve the program, and release your improvements (and modified versions in general) to the public, so that the whole community benefits.

Freedoms 1 and 3 require source code to be available because studying and modifying software without its source code can range from highly impractical to nearly impossible.
Thus, free software means that computer users have the freedom to cooperate with whom they choose, and to control the software they use. To summarize this into a remark distinguishing libre (freedom) software from gratis (zero price) software, the Free Software Foundation says: "Free software is a matter of liberty, not price. To understand the concept, you should think of 'free' as in 'free speech', not as in 'free beer'".[22] See Gratis versus libre.
In the late 1990s, other groups published their own definitions that describe an almost identical set of software. The most notable are Debian Free Software Guidelines published in 1997,[24] and the Open Source Definition, published in 1998.
The BSD-based operating systems, such as FreeBSD, OpenBSD, and NetBSD, do not have their own formal definitions of free software. Users of these systems generally find the same set of software to be acceptable, but sometimes see copyleft as restrictive. They generally advocate permissive free software licenses, which allow others to use the software as they wish, without being legally forced to provide the source code. Their view is that this permissive approach is more free. The Kerberos, X11, and Apache software licenses are substantially similar in intent and implementation.
Examples[edit]
Main article: List of free and open-source software packages




Creating a 3D car racing game using the free/open-source Blender Game Engine






Modern desktop: Here is a screenshot of Linux Mint running the Xfce desktop environment, Firefox, a calculator program, the built-in calendar, Vim, GIMP , and VLC media player. Thousands of other free desktop applications are available on the Internet. Users can easily download and install this free software via a simple package manager that comes with most Linux distributions.


The Free Software Directory maintains a large database of free software packages. Some of the best-known examples include the Linux kernel, the BSD and Linux operating systems, the GNU Compiler Collection and C library; the MySQL relational database; the Apache web server; and the Sendmail mail transport agent. Other influential examples include the Emacs text editor; the GIMP raster drawing and image editor; the X Window System graphical-display system; the LibreOffice office suite; and the TeX and LaTeX typesetting systems.
Licensing[edit]
Main article: Free software license
Further information: Open-source license
See also: Free and open-source software § Licensing
All free software licenses must grant users all the freedoms discussed above. However, unless the applications' licenses are compatible, combining programs by mixing source code or directly linking binaries is problematic, because of license technicalities. Programs indirectly connected together may avoid this problem.
The majority of free software falls under a small set of licenses. The most popular of these licenses are:[25][26]

The MIT License
The GNU General Public License v2
The Apache License
The GNU General Public License v3
The BSD License
The GNU Lesser General Public License
The Mozilla Public License (MPL)
The Eclipse Public License

The Free Software Foundation and the Open Source Initiative both publish lists of licenses that they find to comply with their own definitions of free software and open-source software respectively:

List of FSF approved software licenses
List of OSI approved software licenses

The FSF list is not prescriptive: free licenses can exist that the FSF has not heard about, or considered important enough to write about. So it's possible for a license to be free and not in the FSF list. The OSI list only lists licenses that have been submitted, considered and approved. All open-source licenses must meet the Open Source Definition in order to be officially recognized as open source software. Free software on the other hand is a more informal classification that does not rely on official recognition. Nevertheless, software licensed under licenses that do not meet the Free Software Definition cannot rightly be considered free software.




Editing an audio file using the free/open-source audio editor Audacity


Apart from these two organizations, the Debian project is seen by some to provide useful advice on whether particular licenses comply with their Debian Free Software Guidelines. Debian doesn't publish a list of approved licenses, so its judgments have to be tracked by checking what software they have allowed into their software archives. That is summarized at the Debian web site.[27]
It is rare that a license announced as being in-compliance with the FSF guidelines does not also meet the Open Source Definition, although the reverse is not necessarily true (for example, the NASA Open Source Agreement is an OSI-approved license, but non-free according to FSF).
There are different categories of free software.

Public domain software: the copyright has expired, the work was not copyrighted (released without copyright notice before 1988), or the author has released the software onto the public domain with a waiver statement (in countries where this is possible). Since public-domain software lacks copyright protection, it may be freely incorporated into any work, whether proprietary or free. The FSF recommends the CC0 public domain dedication for this purpose.[28]
Permissive licenses, also called BSD-style because they are applied to much of the software distributed with the BSD operating systems: these licenses are also known as copyfree as they have no restrictions on distribution.[29] The author retains copyright solely to disclaim warranty and require proper attribution of modified works, and permits redistribution and any modification, even closed-source ones. In this sense, a permissive license provides an incentive to create non-free software, by reducing the cost of developing restricted software. Since this is incompatible with the spirit of software freedom, many people consider permissive licenses to be less free than copyleft licenses.
Copyleft licenses, with the GNU General Public License being the most prominent: the author retains copyright and permits redistribution under the restriction that all such redistribution is licensed under the same license. Additions and modifications by others must also be licensed under the same "copyleft" license whenever they are distributed with part of the original licensed product. This is also known as a Viral license. Due to the restriction on distribution not everyone considers this type of license to be free.[30][31]

Security and reliability[edit]




Almost all computer viruses can only affect the Microsoft Windows operating system,[32][33][34] but antivirus software such as Comodo, ClamAV (shown here) is still provided for Linux and other Unix-based systems, so that users can scan files to detect malware that might infect Windows hosts.


There is debate over the security of free software in comparison to proprietary software, with a major issue being security through obscurity. A popular quantitative test in computer security is to use relative counting of known unpatched security flaws. Generally, users of this method advise avoiding products that lack fixes for known security flaws, at least until a fix is available.
Free software advocates strongly believe that this methodology is biased by counting more vulnerabilities for the free software, since its source code is accessible and its community is more forthcoming about what problems exist,[35] (This is called "Security Through Disclosure"[36]) and proprietary software can have undisclosed societal drawbacks, such as disenfranchising less fortunate would-be users of free programs. As users can analyse and trace the source code, many more people with no commercial constraints can inspect the code and find bugs and loopholes than a corporation would find practicable. According to Richard Stallman, user access to the source code makes deploying free software with undesirable hidden spyware functionality far more difficult than for proprietary software.[37]
Some quantitative studies have been done on the subject.[38][39][40][41]




Many free operating systems such as Debian GNU/Linux, OpenBSD, and FreeBSD have more secure default installation configurations than Microsoft Windows, resulting in far fewer compromised systems. Furthermore, users of free operating systems have access to a wide array of free security software, such as the packet analyzer Wireshark (shown here), which they can use to secure their operating systems and networks.


Binary blobs and other proprietary software[edit]
In 2006, OpenBSD started the first campaign against the use of binary blobs in kernels. Blobs are usually freely distributable device drivers for hardware from vendors that do not reveal driver source code to users or developers. This restricts the users' freedom effectively to modify the software and distribute modified versions. Also, since the blobs are undocumented and may have bugs, they pose a security risk to any operating system whose kernel includes them. The proclaimed aim of the campaign against blobs is to collect hardware documentation that allows developers to write free software drivers for that hardware, ultimately enabling all free operating systems to become or remain blob-free.
The issue of binary blobs in the Linux kernel and other device drivers motivated some developers in Ireland to launch gNewSense, a Linux based distribution with all the binary blobs removed. The project received support from the Free Software Foundation and stimulated the creation, headed by the Free Software Foundation Latin America, of the Linux-libre kernel.[42] As of October 2012, Trisquel is the most popular FSF endorsed Linux distribution ranked by Distrowatch (over 12 months).[43]
Business model[edit]
See also: Business models for open-source software
Since free software may be freely redistributed, it is generally available at little or no fee. Free software business models[44] are usually based on adding value such as applications, support, training, customization, integration, or certification. At the same time, some business models that work with proprietary software are not compatible with free software, such as those that depend on the user to pay for a license in order to lawfully use the software product.
Fees are usually charged for distribution on compact discs and bootable USB drives, or for services of installing or maintaining the operation of free software. Development of large, commercially used free software is often funded by a combination of user donations, corporate contributions, and tax money. Depending on the license type, free software can be embedded in commercial products, too.[44] The SELinux project at the United States National Security Agency is an example of a federally funded free software project.
In practice, for software to be distributed as free software, the source code, a human-readable form of the program from which an executable form is produced, must be accessible to the recipient along with a document granting the same rights to free software under which it was published. Such a document is either a free software license or the release of the source code into the public domain.
Selling software under any free software licence is permissible, as is commercial use. This is true for permissive licences, such as the BSD licence,[45][46] or copyleft licences such as the GNU GPL.
The Free Software Foundation encourages selling free software. As the Foundation has written, "Distributing free software is an opportunity to raise funds for development. Don't waste it!".[47] For example the GNU GPL that is the Free Software Foundation's license states that "[the user] may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee."[48]
Microsoft CEO Steve Ballmer stated in 2001 that "Open source is not available to commercial companies. The way the license is written, if you use any open-source software, you have to make the rest of your software open source."[49] This misunderstanding is based on a requirement of copyleft licenses (like the GPL) that if one distributes modified versions of software, they must release the source and use the same license. This requirement does not extend to other software from the same developer. The claim of incompatibility between commercial companies and Free Software is also a misunderstanding. There are several large companies, e.g. Red Hat and IBM, which do substantial commercial business in the development of Free Software.
Under the free software business model[further explanation needed], free software vendors may charge a fee for distribution and offer pay support and software customization services. Proprietary software uses a different business model, where a customer of the proprietary software pays a fee for a license to use the software. This license may grant the customer the ability to configure some or no parts of the software themselves. Often some level of support is included in the purchase of proprietary software, but additional support services (especially for enterprise applications) are usually available for an additional fee. Some proprietary software vendors will also customize software for a fee.[50]
 Economical aspects and adoption[edit]
Main article: Free and open-source software § Adoption
See also: Linux adoption and Open-source software § Adoption


Free Software runs the world



Of the world's five hundred fastest supercomputers, 494 (98.8%) use the Linux kernel.[51] The world's second fastest computer is the Oak Ridge National Laboratory's Titan supercomputer (illustrated), which uses the Cray Linux Environment.[52]



Free software played a significant part in the development of the Internet, the World Wide Web and the infrastructure of dot-com companies.[53][54] Free software allows users to cooperate in enhancing and refining the programs they use; free software is a pure public good rather than a private good. Companies that contribute to free software increase commercial innovation.[55]



“We migrated key functions from Windows to Linux because we needed an operating system that was stable and reliable -- one that would give us in-house control. So if we needed to patch, adjust, or adapt, we could.”


Official statement of the United Space Alliance, which manages the computer systems for the International Space Station (ISS), regarding their May 2013 decision to migrate ISS computer systems from Windows to Linux[56][57]
The economic viability of free software has been recognized by large corporations such as IBM, Red Hat, and Sun Microsystems.[58][59][60][61][62] Many companies whose core business is not in the IT sector choose free software for their Internet information and sales sites, due to the lower initial capital investment and ability to freely customize the application packages. Most companies in the software business include free software in their commercial products if the licenses allow that.[44]
Free software is generally available at no cost and can result in permanently lower TCO costs compared to proprietary software.[63] With free software, businesses can fit software to their specific needs by changing the software themselves or by hiring programmers to modify it for them. Free software often has no warranty, and more importantly, generally does not assign legal liability to anyone. However, warranties are permitted between any two parties upon the condition of the software and its usage. Such an agreement is made separately from the free software license.
A report by Standish Group estimates that adoption of free software has caused a drop in revenue to the proprietary software industry by about $60 billion per year.[64] In spite of this, Eric S. Raymond argues that the term free software is too ambiguous and intimidating for the business community. Raymond promotes the term open-source software as a friendlier alternative for the business and corporate world.[65]
See also[edit]


Free software portal
Software portal



Definition of Free Cultural Works
Digital rights
Free content
Free and open-source software
Libre knowledge
Open format
Open standard
Open-source hardware
Outline of free software
Public domain
Category:Free software lists and comparisons
List of formerly proprietary software
List of free software project directories
List of free software for Web 2.0 Services

References[edit]


^ See GNU Project. "What is Free Software". Free Software Foundation. 
^ http://www.internethalloffame.org/inductees/richard-stallman
^ Free Software Movement (gnu.org)
^ Philosophy of the GNU Project (gnu.org)
^ a b What is free software (fsf.org)
^ "GNU Press - Free Software Foundation Online Shop - Buy GNU t-shirts, books, stickers and stuffed gnu toys". Retrieved 19 March 2015. 
^ "Software Freedom Law Center". 
^ Selling Free Software (gnu.org)
^ "gnu.org". www.gnu.org. Retrieved 2017-01-24. 
^ a b c Shea, Tom (1983-06-23). "Free software - Free software is a junkyard of software spare parts". InfoWorld. Retrieved 2016-02-10. "In contrast to commercial software is a large and growing body of free software that exists in the public domain. Public-domain software is written by microcomputer hobbyists (also known as "hackers") many of whom are professional programmers in their work life. [...] Since everybody has access to source code, many routines have not only been used but dramatically improved by other programmers." 
^ "GNU project Initial Announcement". 
^ Dixon, Rod (2004). Open Source Software Law. Artech House. p. 4. ISBN 978-1-58053-719-3. Retrieved 2009-03-16. 
^ Graham, Lawrence D. (1999). Legal battles that shaped the computer industry. Greenwood Publishing Group. p. 175. ISBN 978-1-56720-178-9. Retrieved 2009-03-16. 
^ Sullivan, John (17 July 2008). "The Last Mile is Always the Hardest". fsf.org. Archived from the original on 28 October 2014. Retrieved 29 December 2014. 
^ Ahl, David. "David H. Ahl biography from Who's Who in America". Retrieved 2009-11-23. 
^ Fisher, Franklin M.; McKie, James W.; Mancke, Richard B. (1983). IBM and the U.S. Data Processing Industry: An Economic History. Praeger. ISBN 0-03-063059-2. 
^ William 2002
^ "Release notes for Linux kernel 0.12". Kernel.org. 
^ "Why "Open Source" misses the point of Free Software". 
^ Stallman, Richard (2013-05-14). "The advantages of free software". Free Software Foundation. Retrieved 2013-08-12. 
^ "GNU's Bulletin, Volume 1 Number 1, page 8". 
^ a b Free Software Foundation. "What is free software?". Retrieved 14 December 2011. 
^ "Four Freedoms - FSFE". fsfe.org. 
^ Perens, Bruce. "Debian's "Social Contract" with the Free Software Community". debian-announce mailing list. 
^ "Top 20 licenses". Black Duck Software. 19 November 2015. Retrieved 19 November 2015. 1. MIT license 24%, 2. GNU General Public License (GPL) 2.0 23%, 3. Apache License 16%, 4. GNU General Public License (GPL) 3.0 9%, 5. BSD License 2.0 (3-clause, New or Revised) License 6%, 6. GNU Lesser General Public License (LGPL) 2.1 5%, 7. Artistic License (Perl) 4%, 8. GNU Lesser General Public License (LGPL) 3.0 2%, 9. Microsoft Public License 2%, 10. Eclipse Public License (EPL) 2% 
^ Balter, Ben (2015-03-09). "Open source license usage on GitHub.com". github.com. Retrieved 2015-11-21. "1 MIT 44.69%, 2 Other 15.68%, 3 GPLv2 12.96%, 4 Apache 11.19%, 5 GPLv3 8.88%, 6 BSD 3-clause 4.53%, 7 Unlicense 1.87%, 8 BSD 2-clause 1.70%, 9 LGPLv3 1.30%, 10 AGPLv3 1.05% 
^ "Debian -- License information". Retrieved 2008-01-08. 
^ "Various Licenses and Comments about Them". gnu.org. Retrieved 20 March 2014. 
^ "CI: Main". Retrieved 19 March 2015. 
^ "Why Not Use the GPL? Thoughts on Free and Open-Source Software". Retrieved 19 March 2015. 
^ "Journey into the minds of strangers". Retrieved 19 March 2015. 
^ Mookhey, K.K.; Burghate, Nilesh (2005). Linux: Security, Audit and Control Features. ISACA. p. 128. ISBN 9781893209787.  CS1 maint: Uses authors parameter (link)
^ Toxen, Bob (2003). Real World Linux Security: Intrusion Prevention, Detection, and Recovery. Prentice Hall Professional. p. 365. ISBN 9780130464569. 
^ Noyes, Katherine (Aug 3, 2010). "Why Linux Is More Secure Than Windows". PCWorld. Archived from the original on 2013-09-01. 
^ "Firefox more secure than MSIE after all". News.com. 
^ "The Benefits of Open Source". Retrieved 19 March 2015. 
^ "Transcript where Stallman explains about spyware". 
^ David A. Wheeler: Why Open Source Software / Free Software (OSS/FS, FLOSS, or FOSS)? Look at the Numbers! 2007
^ Michelle Delio: Linux: Fewer Bugs Than Rivals Wired.com 2004
^ Barton P. Miller; David Koski; Cjin Pheow Lee; Vivekananda Maganty; Ravi Murthy; Ajitkumar Natarajan; Jeff Steidl (October 1995). "Fuzz Revisited: A Re-examination of the Reliability of UNIX Utilities and Services" (PDF). Madison, WI 53706-1685 USA: University of Wisconsin: Computer Sciences Department. Archived from the original (pdf) on 21 June 2010. Retrieved 1 May 2013. ...The reliability of the basic utilities from GNU and Linux were noticeably better than those of the commercial systems [sic] 
^ Barton P. Miller; Gregory Cooksey; Fredrick Moore (20 July 2006). "An Empirical Study of the Robustness of MacOS Applications Using Random Testing" (PDF). Madison, WI 53706-1685 USA: University of Wisconsin: Computer Sciences Department: 1, 2. Archived from the original (pdf) on 21 June 2010. Retrieved 1 May 2013. We are back again, this time testing... Apple’s Mac OS X. [...] While the results were reasonable, we were disappointed to find that the reliability was no better than that of the Linux/GNU tools tested in 1995. We were less sure what to expect when testing the GUI- based applications; the results turned out worse than we expected. 
^ "Links to Other Free Software Sites - GNU Project - Free Software Foundation". Retrieved 19 March 2015. 
^ "DistroWatch Page Hit Ranking". DistroWatch. 30 October 2012. Archived from the original on 7 October 2011. Retrieved 30 October 2012. 
^ a b c Popp, Dr. Karl Michael (2015). Best Practices for commercial use of open source software. Norderstedt, Germany: Books on Demand. ISBN 978-3738619096. 
^ "BSD license definition". Retrieved 19 March 2015. 
^ "Why you should use a BSD style license for your Open Source Project". Retrieved 19 March 2015. 
^ Selling Free Software gnu.org
^ GNU General Public License, section 4. gnu.org
^ "Ballmer calling open source a 'cancer', saying it's "not available to commercial companies"". Archived from the original on 2001-06-15. Retrieved 2001-06-15.  CS1 maint: BOT: original-url status unknown (link) Chicago Sun-Times, 2001
^ Andy Dornan. "The Five Open Source Business Models".  Archived October 10, 2009, at the Wayback Machine.
^ "Top500 - List Statistics - November 2015". Top500.org. Retrieved 29 May 2016. .
^ "Roadrunner - BladeCenter QS22/LS21 Cluster, PowerXCell 8i 3.2 GHz / Opteron DC 1.8 GHz, Voltaire Infiniband". Top500.org. Retrieved 30 March 2013. 
^ Netcraft. "Web Server Usage Survey". 
^ The Apache Software Foundation. "Apache Strategy in the New Economy" (PDF). Archived from the original (PDF) on 2008-02-16. 
^ Waring, Teresa; Maddocks, Philip (1 October 2005). "Open Source Software implementation in the UK public sector: Evidence from the field and implications for the future". International Journal of Information Management. 25 (5): 411–428. doi:10.1016/j.ijinfomgt.2005.06.002. In addition OSS’s development process is creating innovative products that are reliable, secure, practical and have high usability and performance ratings. Users are now not only benefiting from the OSS revolution but also from the improved proprietary software development that is being forced upon suppliers in order to maintain competitive advantage. 
^ Gunter, Joel (May 10, 2013). "International Space Station to boldly go with Linux over Windows". The Telegraph. 
^ Bridgewater, Adrian (May 13, 2013). "International Space Station adopts Debian Linux, drops Windows & Red Hat into airlock". Computer Weekly. 
^ "IBM launches biggest Linux lineup ever". IBM. 1999-03-02. Archived from the original on 1999-11-10. 
^ Hamid, Farrah (2006-05-24). "IBM invests in Brazil Linux Tech Center". LWN.net. 
^ "Interview: The Eclipse code donation". IBM. 2001-11-01. Archived from the original on 2009-12-18. 
^ "Sun begins releasing Java under the GPL". Free Software Foundation. November 15, 2006. Retrieved 2007-09-23. 
^ Rishab Aiyer Ghosh (November 20, 2006). "Study on the: Economic impact of open source software on innovation and the competitiveness of the Information and Communication Technologies (ICT) sector in the EU" (PDF). European Union. p. 51. Retrieved 2007-01-25. 
^ "Total cost of ownership of open source software: a report for the UK Cabinet Office supported by OpenForum Europe". Retrieved 19 March 2015. 
^ "Open Source". Standish Newsroom. Standishgroup.com. 2008-04-16. Archived from the original on 2012-01-18. Retrieved 2010-08-22. 
^ Eric S. Raymond. "Eric S. Raymond's initial call to start using the term open source software, instead of free software". 


Further reading[edit]

Puckette, Miller. "Who Owns our Software?: A first-person case study." eContact (September 2009). Montréal: CEC
Hancock, Terry. "The Jargon of Freedom: 60 Words and Phrases with Context". Free Software Magazine. 2010-20-24
Stallman, Richard M. (2010) [2002]. Free Software Free Society: Selected Essays of Richard M. Stallman, 2nd Edition. GNU Press. ISBN 978-0-9831592-0-9. 

External links[edit]



Wikiquote has quotations related to: Free software





Wikimedia Commons has media related to Free software.





Wikinews has news related to:
FLOSS




Definition and philosophy


Free Software Movement (gnu.org)
Philosophy of the GNU Project (gnu.org)
What is free software? (gnu.org)
What is free software? (fsf.org)
Categories of free and nonfree software (gnu.org)
Freedom for Users, Not for Software (Benjamin Mako Hill)
What Does Free Mean? or What do you mean by Free Software? (debian.org)


Presentations


Video and audio presentations on Free Software (top link)
Free as in Freedom (originally the oggcast of the Software Freedom Law Center, it includes a focus on law issues, and other topics)


Software


Free Software from the GNU Project
Free Software Directory (catalog of useful free software)







v
t
e


Free and open-source software






General



Alternative terms for free software
Comparison of open-source and closed-source software
Comparison of source code hosting facilities
Free software
Free software project directories
Gratis versus libre
Long-term support
Open-source software
Open-source software development
Outline








Software
packages



Audio
Bioinformatics
Codecs
Collaboration
Configuration management
Device drivers

Graphics
Wireless


Geophysics
Health
Mathematics
Operating systems
Programming languages
Routing
Statistics
Television
Video games
Web applications

Content management systems
E-commerce


Word processors
Android apps
iOS apps
Commercial
Trademarked
Formerly proprietary








Community



Free software movement
History
Open-source software movement
Organizations
Events








Licenses



Apache
APSL
Artistic
Beerware
Boost
BSD
CC0
CDDL
EPL
GNU GPL
GNU LGPL
ISC
MIT
MPL
Ms-PL/RL
WTFPL
zlib








License types
and standards



Comparison of free and open-source software licenses
Contributor License Agreement
Copyfree
Copyleft
Debian Free Software Guidelines
Definition of Free Cultural Works
Free license
The Free Software Definition
The Open Source Definition
Open-source license
Permissive free software licence
Public domain
Viral license








Challenges



Binary blob
Digital rights management
Hardware restrictions
License proliferation
Mozilla software rebranding
Proprietary software
SCO/Linux controversies
Secure boot
Software patents
Software security
Trusted Computing








Related topics



The Cathedral and the Bazaar
Forking
Microsoft Open Specification Promise
Revolution OS











 Book
 Category
 Commons
 Portal












v
t
e


Software distribution






Licenses



Beerware
Floating licensing
Free
Free and open-source
Freely redistributable
Open source
Proprietary
Public domain








Compensation models



Adware
Commercial software

Retail software


Crippleware
Crowdfunding
Freemium
Freeware
Pay what you want

Careware
Donationware


Open core
Postcardware
Shareware

Nagware










Delivery methods



Digital distribution
File sharing
On-premises
Pre-installed
Product bundling
Retail software
Software as a service








Deceptive and/or illicit



Unwanted software bundling
Malware

Spyware
Trojan horse
Worm
Ransomware


Scareware
Shovelware
Vaporware








Software release life cycle



Abandonware
End-of-life
Long-term support
Software maintenance
Software maintainer
Software publisher








Copy protection



Digital rights management
Software protection dongle
Hardware restrictions
License manager
Product activation
Product key
Software copyright
Software patent
Torrent poisoning












v
t
e


Independent production






Reading



Alternative comics
Alternative manga
Fanzine
Webcomic

business


Minicomic

Co-ops


Dōjinshi

conventions
printers
shops


Self publishing
Amateur press association
Small press








Audio







Independent music
Record label

Netlabel
Open-source label


Radio
Station
Pirate radio
Dōjin music
Tracker (MOD) music
Lo-fi music
Cassette culture
Podsafe









Musical instruments




Circuit bending
Experimental musical instrument











Video





Amateur




Home movies
Amateur film
Amateur pornography
Fan film
Machinima









Professional




Independent animation
Cinema of Transgression
Independent film
Exploitation film
B movie

Golden Age
50s
60s–70s
80s–present


Z movie
Midnight movie
Low-budget film
No budget film
No Wave Cinema
Double feature











Software







Open-source software
Cowboy coding
Cracking
Unofficial patch
Scene
Demos (demoscene)









Video games




Indie game
Homebrew
Fangame
Dōjin soft
Open-source video game
Mod
ROM hack











Other



Indie art
Mail art
Indie RPG
Independent circuit (wrestling)
Independent TV station











Food
Drinks






Independent soft drink
Homebrewing
Microbrewery








General



Indie design
Do it yourself (DIY ethic)
Dōjin
Make (magazine)
Maker Faire









 
						Retrieved from "https://en.wikipedia.org/w/index.php?title=Free_software&oldid=764081175"					
Categories: Free softwareSoftware licensesApplied ethicsHidden categories: CS1 maint: Uses authors parameterCS1 maint: BOT: original-url status unknownWebarchive template wayback linksWikipedia articles needing clarification from April 2012Commons category with page title same as on Wikidata 



Navigation menu


Personal tools

Not logged inTalkContributionsCreate accountLog in 



Namespaces

Article
Talk




Variants









Views

Read
Edit
View history



More







Search



 







Navigation


Main pageContentsFeatured contentCurrent eventsRandom articleDonate to WikipediaWikipedia store 



Interaction


HelpAbout WikipediaCommunity portalRecent changesContact page 



Tools


What links hereRelated changesUpload fileSpecial pagesPermanent linkPage informationWikidata itemCite this page 



Print/export


Create a bookDownload as PDFPrintable version 



In other projects


Wikimedia CommonsWikinewsWikiquote 



Languages


AfrikaansالعربيةAragonésAsturianuAzərbaycancaবাংলাBân-lâm-gúБеларускаяБеларуская (тарашкевіца)‎БългарскиBosanskiBrezhonegCatalàČeštinaDanskDeutschEestiΕλληνικάEspañolEsperantoEuskaraفارسیFrançaisGaeilgeGaelgGalegoگیلکیગુજરાતી한국어Հայերենहिन्दीHrvatskiIdoIlokanoBahasa IndonesiaInterlinguaÍslenskaItalianoעבריתKurdîLatinaLatviešuLietuviųMagyarМакедонскиMalagasyമലയാളംमराठीBahasa MelayuNederlands日本語Norsk bokmålNorsk nynorskOccitanОлык марийਪੰਜਾਬੀPolskiPortuguêsRomânăRomaniРусскийShqipසිංහලSimple EnglishSlovenčinaSlovenščinaŚlůnskiکوردیی ناوەندیСрпски / srpskiSrpskohrvatski / српскохрватскиSuomiSvenskaTagalogதமிழ்ไทยТоҷикӣTürkçeУкраїнськаاردوTiếng Việt吴语粵語中文 
Edit links 





 This page was last modified on 6 February 2017, at 23:27.
Text is available under the Creative Commons Attribution-ShareAlike License;
additional terms may apply.  By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.


Privacy policy
About Wikipedia
Disclaimers
Contact Wikipedia
Developers
Cookie statement
Mobile view



 

 



(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.612","walltime":"0.710","ppvisitednodes":{"value":4411,"limit":1000000},"ppgeneratednodes":{"value":0,"limit":1500000},"postexpandincludesize":{"value":164681,"limit":2097152},"templateargumentsize":{"value":4544,"limit":2097152},"expansiondepth":{"value":11,"limit":40},"expensivefunctioncount":{"value":1,"limit":500},"entityaccesscount":{"value":1,"limit":400},"timingprofile":["100.00%  534.823      1 -total"," 55.82%  298.557      1 Template:Reflist"," 32.21%  172.279     43 Template:Cite_web"," 10.83%   57.918      6 Template:Navbox","  7.22%   38.639      1 Template:Elucidate","  6.23%   33.340      1 Template:Fix","  5.40%   28.854      1 Template:Independent_production","  4.66%   24.898      7 Template:Cite_book","  4.11%   22.007      1 Template:Other_uses","  3.72%   19.909      3 Template:Sister_project"]},"scribunto":{"limitreport-timeusage":{"value":"0.251","limit":"10.000"},"limitreport-memusage":{"value":5930998,"limit":52428800}},"cachereport":{"origin":"mw1269","timestamp":"20170211223333","ttl":2592000,"transientcontent":false}}});});(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgBackendResponseTime":77,"wgHostname":"mw1211"});});
