 






Wikipedia:Lua

From Wikipedia, the free encyclopedia
  (Redirected from Wikipedia:LUA)

					Jump to:					navigation, 					search



 
WP:Lua
Project
 
WT:Lua
Project talk
 
Help
 
 
To do
 
 
Resources
en: m: mw: external
 





Project subpages (m:Lua – "central" page at Meta-Wiki. - mw:Lua – index at www.mediawiki.org)





This information page describes the editing community's consensus on some aspect or aspects of Wikipedia's norms and practices. It is not one of Wikipedia's policies or guidelines.


Shortcut:

WP:Lua








Wikipedia data structure




Namespaces



Subject namespaces
Talk namespaces


0
(Main/Article)
Talk
1


2
User
User talk
3


4
Wikipedia
Wikipedia talk
5


6
File
File talk
7


8
MediaWiki
MediaWiki talk
9


10
Template
Template talk
11


12
Help
Help talk
13


14
Category
Category talk
15


100
Portal
Portal talk
101


108
Book
Book talk
109


118
Draft
Draft talk
119


446
Education Program
Education Program talk
447


710
TimedText
TimedText talk
711


828
Module
Module talk
829


2300
Gadget
Gadget talk
2301


2302
Gadget definition
Gadget definition talk
2303



Virtual namespaces



-1
Special


-2
Media


Lua is a programming language that is now available, via the Scribunto MediaWiki extension, on the English Wikipedia. Lua code can now be embedded into wiki templates by employing the "{{#invoke:}}" functionality of Scribunto. This extension supports Lua 5.1 as of July 2015[update].
The Lua source code is stored in pages called modules (e.g., Module:Bananas). These individual modules are then invoked (by code {{#invoke:}}) on template pages (e.g. Module:Bananas/doc uses the code {{#invoke:Bananas|hello}} to print the text "Hello, world!").



Contents


1 Running a module

1.1 Using arguments


2 Example modules
3 Request a script
4 History
5 About Lua
6 Unit testing
7 Wikipedia-specific features

7.1 Lua input limitations
7.2 Wikitext


8 Labeling converted templates
9 See also
10 Notes



Running a module[edit]
Modules are run on normal wiki pages using the #invoke parser function. The syntax of #invoke is similar to template syntax, but with some differences. The most important difference is that you need to specify a function name. A function is a set of instructions that takes input values, processes them, and returns an output value.[1] This is much like what a template does: you give it arguments, it processes them, and you get a result. However, you can define many functions in one Lua module, whereas you can only define one template on one page.
Furthermore, you can't just run a Lua module directly - you can only run one of the module's functions. The module is just a container for the functions, and doesn't do anything by itself. So there are two reasons that we need to input a function name: we can't run a module by itself, and without specifying a function name, Lua will not know which function it is we want to run.
The simplest way to run a module from a wiki page is like this:

{{#invoke:module name|function name}}

For example, we can run Module:Bananas in this way, which has one function named "hello".

{{#invoke:Bananas|hello}} → Hello, world!

Using arguments[edit]
Arguments are passed to modules in the same way that they are passed to templates. Note, however, that the text after the first pipe character is always the function name; the first positional argument is the text after the second pipe.

{{#invoke:module name|function name|first positional argument|second positional argument|named argument = value}}

For example, in Module:BananasArgs, the "hello" function greets different people depending on the first positional argument. It works like this:

{{#invoke:BananasArgs|hello|Kate}} → Hello, Kate!
{{#invoke:BananasArgs|hello|Fred}} → Hello, Fred!

BananasArgs also has a function named "count_fruit" which uses the named arguments bananas and apples to count the number of bananas and apples we have. It can be run like this:

{{#invoke:BananasArgs|count_fruit|apples=3|bananas=4}} → I have 4 bananas and 3 apples
{{#invoke:BananasArgs|count_fruit|bananas=5|apples=2}} → I have 5 bananas and 2 apples

Most modules will have a documentation page explaining what arguments can be used and what their effects will be.
Example modules[edit]

Module:Bananas: The simplest possible script, providing a single function with no arguments.
Module:BananasArgs: Demonstrates how to access and use parameters.

Request a script[edit]
Visit Wikipedia:Lua requests to request help in writing a Lua script to perform a specific task on Wikipedia or another Wikimedia Foundation project.
History[edit]
Sordid history. {{qif}}, ParserFunctions, Lua extension, wiki scripting language debated (JavaScript v. Lua), mw:Extension:WikiScripts, Tim writes Scribunto with initial support for Lua.
Discussed for years, Lua was installed in 2012 for testing on test2.wikipedia.org, with open invitation to all editors to experiment with developing Lua modules. Lua was installed on the English Wikipedia in February 2013, after testing on mediawiki.org and Wikimedia test wikis.
About Lua[edit]

See also Brad Jorsch's short presentation for a basic example of how to convert a wikitext template into a Lua module.

Lua is a scripting language which can be used to analyze data, calculate expressions, and format results using functions or object-oriented programming. Although some Lua scripts can be kept simple, for easy understanding, Lua allows complex structures including tables, dynamic functions, and associative arrays where index subscripts can be words as well as index numbers. Lua also supports recursion of re-nested functions, so care should be taken to avoid excessive complexity where other users would not understand how to maintain a Lua module. The following is an example of Lua source code for a hello world function contained in Module:HelloWorld:


-- All Lua modules on Wikipedia must begin by defining a variable that will hold their
-- externally accessible functions. They can have any name and may also hold data.
my_object = {}

-- Add a function to the variable. These are callable in Wikipedia via the #invoke command.
-- "frame" will contain the data that Wikipedia sends this function when it is called. 
my_object.hello = function( frame ) 

    -- Declare a local variable and assign data to it.
    local str = "Hello World!"  

    -- Quit this function and send the information in "str" back to Wikipedia.
    -- The "print" function is not allowed, so all output is accomplished via 
    -- returning strings in this fashion.
    return str    

-- End the function.
end

-- All modules end by returning the variable containing its functions to Wikipedia.
return my_object

-- We can now use this module by calling {{#invoke: HelloWorld | hello }}.
-- The #invoke command begins with the module's name, in this case "HelloWorld",
-- then takes the name of one of its functions as an argument, in this case "hello".

A sample of Lua is highlighted by tag "<source lang="lua">...</source>" placed around the Lua source code. To view some more complex examples of Lua, see article: "Lua (programming language)".
For instructions on how to use Lua within MediaWiki (and hence Wikipedia), see mw:Extension:Scribunto/Lua reference manual.
Unit testing[edit]
A unit testing framework for Lua scripts on Wikipedia is available at Module:UnitTests. It allows you to execute your script on a given set of inputs and verify that the expected outputs are produced. Unit tests are especially useful for rapidly detecting regressions, where modifications to a script introduce new (or old) problems.
By convention, unit tests for a module like Module:Bananas are placed in Module:Bananas/testcases, and are executed on Module talk:Bananas/testcases with e.g. {{#invoke: Bananas/testcases | run_tests}}. Test methods must begin with "test". A simple example from Module:Bananas/testcases is below.


-- Unit tests for [[Module:Bananas]]. Click talk page to run tests.
local p = require('Module:UnitTests')
 
function p:test_hello()
    self:preprocess_equals('{{#invoke:Bananas | hello}}', 'Hello, world!')
end
 
return p

For a list of all modules using unit tests, see Special:Whatlinkshere/Module:UnitTests.
There's also an alternative unit testing framework in use called Module:ScribuntoUnit, that originates from Hungarian Wikipedia. Feature-wise it's very similar to Module:UnitTests, but it has a different coding style, and throws real errors that are trapped using protected calls. It also has a method to compare floats within a given precision.
Wikipedia-specific features[edit]
Overall: Lua can only get input as text strings passed to the {{#invoke:}} and what can be fetched via mw.title.new(...):getContent() and frame:expandTemplate(). Lua output will not be preprocessed unless frame:preprocess() is explicitly called, meaning that template calls, parser functions, etc. in the output will not work correctly. Also, all Lua in the page is limited to 10 seconds CPU time (you can look in the source code of a rendered page to see how long a template or module took to parse). And relative to standard Lua, Scribunto's Lua lacks all sorts of functions (see mw:Extension:Scribunto/Lua reference manual § Differences from standard Lua).
Lua input limitations[edit]
Lua code in Scribunto is only run when the page is being parsed. Therefore, the only user input that Lua can receive is by page editing - it cannot create a box that calculates the square root of a number you type in, or recalculate a piece of the Mandelbrot set depending on which part of the parent set you click on. The input Lua can receive includes any transcludeable text page on Wikipedia. This does not include graphics files (not even .SVG files, although they are actually text, unless you cut and paste it onto a Wiki text page), the list of pages listed in a category, nor the contents of non-transcludeable special pages.
Wikitext[edit]
Transcluded Wikipedia headers frequently contain a hidden code such as "UNIQ5ae8f2aa414ff233-h-3--QINU" which may need to be stripped out in order for them to be parsed effectively.
Wikilinks of the type [[Wikipedia:Help|]] won't work if returned as output - they need to be written explicitly as [[Wikipedia:Help|Help]]. Other pre-save transforms, such as replacing ~~~~ with signatures, will also fail to be processed. Template transclusions, parser function calls, and variable substitutions (i.e. anything with a {{...}}) will not be processed, nor will tags such as <ref> or <nowiki>.
Labeling converted templates[edit]



Uses Lua:


Module:Bananas





Please place the {{lua}} template on the documentation subpage of all templates that use Lua. It will help to better communicate Lua usage and template conversions.

See also[edit]

English Wikipedia-specific resources


Wikipedia:Lua style guide – standards to improve the readability of code through consistency
Special:PrefixIndex/Module: – tracking of Lua modules can be done by using Special:PrefixIndex
Help:Lua debugging – a how-to guide about debugging Lua modules
Module:Sandbox provides a pseudo-namespace for experimenting with Lua modules
WP:Lua requests – requests for Lua-based templates or tasks
Category:Lua-based templates – groups of Lua-based templates
Category:Lua metamodules –


MediaWiki Lua documentation


mw:Extension:Scribunto/Lua reference manual

Notes[edit]


^ You can also have multiple output values, but functions that do this are not normally meant to be accessed from wiki pages.








v
t
e


Wikipedia technical help







Get personal technical help at the Teahouse, Help desk, Village pump (technical), talk pages or IRC.






General technical
help



Multilingual support
Special Characters

Entering


Browser notes

Troubleshooting
Bypass cache


Mobile access
Printing
Keyboard shortcuts
Editing

Edit toolbar
CharInsert
Edit conflict
Reverting


VisualEditor

User guide


User access levels
Software notices

Editnotice


IRC

Tutorial


Create a page
Page history
Page information
Page name

Introduction










Special page related



Special page help
Searching

Advanced search
Linksearch


Logging in

Reset passwords


Notifications/Echo

FAQ


Moving a page

Fixing cut-and-paste moves


Watching pages
User contributions
Emailing users
Random pages
Logs
What links here
Related changes
Recent changes
Pending changes
Page Curation
Page import
Edit filter
Tags








Wiki markup



Wiki markup main page

Cheatsheet


Colours use
Columns
Line-break handling
Lists
Magic words

For beginners
Conditional expressions
Switch parser function
Time function


Redirects
Sections and TOCs
Tables

Introduction
Basics
Conditional tables
Sorting
Collapsing
Advanced table formatting










Links and diffs



URLs
Links
Permanent link
Interwikimedia links
Interlanguage links
Link color
Pipe trick
Colon trick
Magic links
Diffs

Simplest diff guide
Simple diff and link guide
Complete diff and link guide










Media files: images,
videos and sounds



Media help
Options to hide an image
Uploading images

Introduction


Files

Creation and usage
Moving files to Commons


Visual file markup
Images

Preparing images for upload
Picture tutorial
Extended image syntax


Gallery tag
Graphics tutorials

Basic bitmap image editing
How to improve image quality


Graphics Lab resources
Sound file markup
SVG help








Other graphics



Family trees
Graphs and charts

How to create
To scale charts
Barcharts


Math formula

Math symbols
Rendering math
LaTeX symbols


Musical scores

Musical symbols


Timeline

EasyTimeline syntax


WikiHiero syntax








Templates
and Lua modules



Templates
Template messages
Citation templates
Transclusion

Labeled section


Substitution
Advanced template coding
Template limits
Template sandbox and test cases
Template documentation
Purge
Lua help
Lua project

To do
Resources


Guide to Scribbling








Data structure



Namespaces
Main/Article
Talk namespaces

Archiving


User

User page design


Project/Wikipedia
File

File pages


MediaWiki

Bug reports and feature requests
System message


Template
Help
Category
Portal
Book
Draft
Education Program
TimedText
Module/Lua
Topic/Flow
Special
Media








HTML and CSS



HTML in wikitext
Markup validation
Span tags
Cascading Style Sheets
Catalogue of CSS classes
Useful styles
Classes used in microformats
Ambox classes
Common.js and common.css








Customisation and tools



Preferences
Skins
Customizing watchlists

Hide pages


Gadgets
Beta Features
User scripts

Guide
Techniques


IRC Scripts
User styles
Tools

Navigation shortcuts
Browser tools
Alternative browsing
Editing tools
Optimum tool set


Cleaning up vandalism tools
Citation tools
Wikimedia Labs








Automating editing



Bots

Creating


Twinkle
FurMe
NPWatcher
HotCat
WPCleaner
igloo
AutoWikiBrowser
Navigation popups
STiki
AfC helper script
Huggle








Relevant navigation



Help pages

Administrators


Templates
Referencing

Citation metadata


Accessibility
Bots
User scripts










See also: Category:Wikipedia information pages and Category:Wikipedia how-to








 
						Retrieved from "https://en.wikipedia.org/w/index.php?title=Wikipedia:Lua&oldid=764718153"					
Categories: Wikipedia information pagesWikipedia modules 



Navigation menu


Personal tools

Not logged inTalkContributionsCreate accountLog in 



Namespaces

Project page
Talk




Variants









Views

Read
Edit
View history



More







Search



 







Navigation


Main pageContentsFeatured contentCurrent eventsRandom articleDonate to WikipediaWikipedia store 



Interaction


HelpAbout WikipediaCommunity portalRecent changesContact page 



Tools


What links hereRelated changesUpload fileSpecial pagesPermanent linkPage informationWikidata item 



Print/export


Create a bookDownload as PDFPrintable version 



In other projects


Wikimedia CommonsMediaWiki 



Languages


AfrikaansالعربيةবাংলাभोजपुरीCatalàDanskDeutschDolnoserbskiEspañolEsperantoفارسیFrançaisGalegoગુજરાતી한국어HornjoserbsceIlokanoBahasa IndonesiaItalianoעבריתKurdîLatviešuMagyarमराठीBahasa Melayu日本語Norsk bokmålଓଡ଼ିଆਪੰਜਾਬੀPolskiPortuguêsRomânăРусскийसंस्कृतम्සිංහලسنڌيSlovenščinaSrpskohrvatski / српскохрватскиBasa SundaSuomiSvenskaไทยTürkçe吴语粵語中文 
Edit links 





 This page was last modified on 10 February 2017, at 15:17.
Text is available under the Creative Commons Attribution-ShareAlike License;
additional terms may apply.  By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.


Privacy policy
About Wikipedia
Disclaimers
Contact Wikipedia
Developers
Cookie statement
Mobile view



 

 



(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.168","walltime":"0.222","ppvisitednodes":{"value":2306,"limit":1000000},"ppgeneratednodes":{"value":0,"limit":1500000},"postexpandincludesize":{"value":66029,"limit":2097152},"templateargumentsize":{"value":9181,"limit":2097152},"expansiondepth":{"value":13,"limit":40},"expensivefunctioncount":{"value":0,"limit":500},"entityaccesscount":{"value":0,"limit":400},"timingprofile":["100.00%  158.028      1 -total"," 32.56%   51.448      1 Template:Information_page"," 27.26%   43.086      1 Template:Ombox"," 25.66%   40.554      1 Template:WikiProject_Lua_header"," 24.31%   38.409      1 Template:Start_tab"," 11.25%   17.781      1 Template:Wikipedia_technical_help"," 10.57%   16.697      5 Template:Tab","  9.89%   15.622      1 Template:Navbox","  8.47%   13.391      1 Template:As_of","  4.85%    7.665      1 Template:DMCA"]},"scribunto":{"limitreport-timeusage":{"value":"0.035","limit":"10.000"},"limitreport-memusage":{"value":1767581,"limit":52428800}},"cachereport":{"origin":"mw1263","timestamp":"20170211144909","ttl":2592000,"transientcontent":false}}});});(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgBackendResponseTime":63,"wgHostname":"mw1268"});});
